## 正如开智卡片所说，我们的目标很明确，就是要实现这四个功能：

 * 1 输入城市名，返回该城市的天气情况；
 * 2 输入help，打印出帮助文档；
 * 3 输入quit，退出程序；
 * 4 输入history，打印出帮助文档；
 
面对这四个任务，我们需要一个一个来实现，首先，我们先排列一下任务的难度：1>4>3>2。

我们完成任务时，我自己的经验来看，最好是先难后易，因为人的精力和兴趣都是随着任务的进行而不断下降的。

### 先完成第一个任务：输入城市名，返回城市的天气状况。
 
天气有关的数据是储存在txt格式的文件中，很显然，直接打开该文件，只能一行一行的读取数据，
并不能产生一一对应的关系。那么，什么样的数据储存类型，能够产生这种一一对应的效果呢？
**dictionary**。这样，我们就先想办法把数据储存在dict里，用weather_dict = {}，然后，用for循环，
一行一行的将数据写入weather_dict内，需要注意的是，每行后面都有一个\n符，在写入dict的values时，
需要删掉。

### 在完成第四个任务：输入history，打印出帮助文档。

要完成这个任务，每进行一次查询，就需要记录一次。由于查询和记录是在一起接连发生的，所以最好在一个代码
块内完成。在进行第一个任务是，顺便将打印的结果，用history_dict = {} 储存下来。

### 下面两个任务，任务2和任务3，一起完成。

加上已经进行储存后的任务4，在一个代码块内，通过if--elif--else语句进行实现。退出程序，用quit()。

## 需要注意的几点：

* 用for循环打印字典的内容时，用字典里面的item()语句，例如：history_dict.item()
* 由于在整个程序的执行过程中，我们每进行一次输入都会有一个输出，并且程序继续运行，提示你继续输入，
知道你输入quit().说明程序一直在运行，要实现这种效果，可以用 while True:
语句将整个代码包括在内。

